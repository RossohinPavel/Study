""" Упражнение 1
Вводятся два целых положительных числа n и m, причем, n < m.
Вывести в строку через пробел квадраты целых чисел в диапазоне [n; m]. Программу реализовать при помощи цикла while.
Sample Input: 2 4
Sample Output: 4 9 16
"""
a, b = map(int, input().split())
while a <= b:
    print(a ** 2, end=' ')
    a += 1


""" Упражнение 2
Вводится стоимость одной книги x рублей (вещественное число). Необходимо вывести на экран в строчку 
через пробел стоимости 2, 3, ... 10 таких книг с точностью до десятых. Программу реализовать при помощи цикла while.
Sample Input: 34.6
Sample Output: 69.2 103.8 138.4 173.0 207.6 242.2 276.8 311.4 346.0
"""
a = float(input())
b = 2
while b <= 10:
    print(round(a * b, 1), end=' ')
    b += 1


""" Упражнение 3
Вводится целое положительное число n. Вычислить и вывести на экран сумму: 1 + 1/2 + 1/3 + ... + 1/n 
с точностью до тысячных (три знака после запятой). Программу реализовать при помощи цикла while.
Sample Input: 8
Sample Output: 2.718
"""
a = int(input())
b = 0
while a >= 1:
    b += 1/a
    a -= 1
print(round(b, 3))


""" Упражнение 4
На каждой итерации цикла пользователь вводит целое число. Цикл продолжается, пока не встретится число 0. 
Необходимо вычислить сумму введенных в цикле чисел и вывести результат на экран. 
Программу реализовать при помощи цикла while.
Sample Input: 8 / 11 / 2 / -4 / 0
Sample Output: 17
"""
s = 0
b = 1
while b != 0:
    b = int(input())
    s += b
print(s)


""" Упражнение 5
Вводится строка (слаг). Замените в этой строке все подряд идущие дефисы (--, ---, ---- и т.д.) на одинарные (-). 
Результат преобразования строки выведите на экран. Программу реализовать при помощи цикла while.
Sample Input: osnovnye--metody-----slovarey
Sample Output: osnovnye-metody-slovarey
"""
s = input()
while '--' in s:
    s = s.replace('--', '-')
print(s)


""" Упражнение 6
Вводится натуральное (то есть, целое положительное) число (от трехзначного и более). 
Найти произведение всех его цифр. Результат вывести на экран. Программу реализовать при помощи цикла while.
Sample Input: 821
Sample Output: 16
"""
a = str(input())
i = 0
s = 1
while i <= len(a) - 1:
    s *= int(a[i])
    i += 1
print(s)


""" Упражнение 7
Последовательность Фибоначчи образуется так: первые два числа равны 1 и 1, а каждое последующее равно сумме 
двух предыдущих. Имеем такую последовательность чисел: 1, 1, 2, 3, 5, 8, 13, ... 
Постройте последовательность Фибоначчи длиной n (n вводится с клавиатуры). 
Результат отобразите в виде строки полученных чисел, записанных через пробел. 
Программу реализовать при помощи цикла while.
Sample Input: 8
Sample Output: 1 1 2 3 5 8 13 21
"""
l = int(input())
sq = [1, 1]
while len(sq) < l:
    sq.append(sq[-1] + sq[-2])
print(*sq)


""" Упражнение 8
Одноклеточная амеба каждые 3 часа делится на 2 клетки. Определить, сколько клеток будет через n часов 
(n - целое положительное число, вводимое с клавиатуры). Считать, что изначально была одна амеба. 
Результат вывести на экран. Задачу необходимо решить с использованием цикла while.
Sample Input: 11
Sample Output: 8
"""
a = int(input())
am = 1
while a > 3:
    a -= 3
    am = am * 2
print(am)


""" Упражнение 9
Гражданин 1 января открыл счет в банке, вложив 1000 руб. Каждый год размер вклада увеличивается на 5% 
от имеющейся суммы. Определить сумму вклада через n лет (n - целое положительное число, вводимое с клавиатуры). 
Результат округлить до сотых и вывести на экран. Программу реализовать при помощи цикла while.
Sample Input: 5
Sample Output: 1276.28
"""
y = int(input())
s = 1000
while y > 0:
    s += s * 0.05
    y -= 1
print(round(s, 2))


""" Упражнение 10
Вводятся два натуральных четных числа n и m в одну строчку через пробел, причем n < m. 
Напечатать все нечетные числа из интервала [n, m]. Задачу решить без применения условного оператора. 
Результат вывести на экран в виде строки чисел, записанных через пробел. Программу реализовать при помощи цикла while.
Sample Input: 2 10
Sample Output: 3 5 7 9
"""
n, m = map(int, input().split())
a = n + 1
while n < a <m:
    print(a, end=' ')
    a += 2


""" Упражнение 11
Составить программу поиска всех трехзначных чисел, которые при делении на 47 дают в остатке 43 и кратны 3. 
Вывести найденные числа в строчку через пробел. Программу реализовать при помощи цикла while.
Sample Input:
Sample Output: 231 372 513 654 795 936
"""
a = 100
while a < 1000:
    if a % 47 == 43 and a % 3 == 0:
        print(a, end=' ')
    a += 1

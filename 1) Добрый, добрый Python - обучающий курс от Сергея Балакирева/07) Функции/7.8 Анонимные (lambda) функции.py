""" Упражнение 1
Объявите анонимную (лямбда) функцию с одним параметром для возведения числа в квадрат.
Присвойте эту функцию переменной get_sq. Вызывать функцию не нужно, только задать.
"""
get_sq = lambda x: x ** 2


""" Упражнение 2
Объявите анонимную (лямбда) функцию с двумя параметрами для деления одного целого числа на другое. Если происходит 
деление на ноль, то функция должна возвращать значение None, иначе - результат деления.
Присвойте эту функцию переменной get_div. Вызывать функцию не нужно, только задать.
"""
get_div = lambda x, y: None if x == 0 or y == 0 else x / y


""" Упражнение 3
Объявите анонимную (лямбда) функцию для вычисления модуля числа (то есть, отрицательные числа нужно делать 
положительными). Вызовите эту функцию для введенного числа x: x = float(input())
Отобразите результат работы функции на экране.
Sample Input: -5.6
Sample Output: 5.6
"""
x = float(input())
m = lambda x: abs(x)
print(m(x))


""" Упражнение 4
Объявите анонимную (лямбда) функцию для определения вхождения в переданную ей строку фрагмента "ra". То есть, 
функция должна возвращать True, если такой фрагмент присутствует в строке и False - в противном случае.
Вызовите эту функцию для введенной строки s: s = input() Отобразите результат работы функции на экране.
Sample Input: abrakadabra
Sample Output: True
"""
s = input()
m = lambda x: True if 'ra' in x else False
print(m(s))


""" Упражнение 5
В программе задана функция filter_lst (см. программу ниже), которая отбирает элементы, переданного ей итерируемого 
объекта и возвращает сформированный кортеж значений. На вход программы поступает список целых чисел, записанных в одну 
строчку через пробел. Вызовите функцию filter_lst для формирования:
- кортежа из всех значений входного списка (передается в параметр it);
- кортежа только из отрицательных чисел;
- кортежа только из неотрицательных чисел (то есть, включая и 0);
- кортежа из чисел в диапазоне [3; 5]
Каждый результат работы функции следует отображать с новой строки командой: print(*lst) где lst - список на возвращенный 
функцией filter_lst. Для отбора нужных значений формальному параметру key следует передавать соответствующие определения 
анонимной функции.
Sample Input: 5 4 -3 4 5 -24 -6 9 0
Sample Output:
    5 4 -3 4 5 -24 -6 9 0
    -3 -24 -6
    5 4 4 5 9 0
    5 4 4 5
"""
def filter_lst(it, key=None):
    if key is None:
        return tuple(it)
    res = ()
    for x in it:
        if key(x):
            res += (x,)
    return res
a = list(map(int, input().split()))
lst = filter_lst(a)
print(*lst)
lst = filter_lst(a, lambda x: x < 0)
print(*lst)
lst = filter_lst(a, lambda x: x >= 0)
print(*lst)
lst = filter_lst(a, lambda x: 3 <= x <= 5)
print(*lst)

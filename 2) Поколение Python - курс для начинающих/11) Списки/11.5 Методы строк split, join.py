""" Упражнение 1
а вход программе подается строка текста. Напишите программу, которая выводит слова введенной строки в столбик.
Формат входных данных
На вход программе подается строка текста.
Формат выходных данных
Программа должна вывести текст в соответствии с условием задачи.
Sample Input:
У лукоморья дуб зеленый златая цепь на дубе том
Sample Output:
    У
    лукоморья
    дуб
    зеленый
    златая
    цепь
    на
    дубе
    том
"""
print(*input().split(), sep='\n')


""" Упражнение 2
На вход программе подается строка текста, содержащая имя, отчество и фамилию человека. Напишите программу, которая 
выводит инициалы человека.
Формат входных данных
На вход программе подается строка текста, содержащая имя, отчество и фамилию человека.
Формат выходных данных
Программа должна вывести текст в соответствии с условием задачи.
Sample Input: Владимир Семенович Высоцкий
Sample Output: В.С.В.
"""
print(*[f'{x[0]}.' for x in input().split()], sep='')


""" Упражнение 3
В операционной системе Windows полное имя файла состоит из буквы диска, после которого ставится двоеточие и символ  
"\\",  затем через такой же символ перечисляются подкаталоги (папки), в которых находится файл, в конце пишется имя
файла (C:\Windows\System32\calc.exe).
На вход программе подается одна строка с корректным именем файла в операционной системе Windows. Напишите программу, 
которая разбирает строку на части, разделенные символом "\\". Каждую часть вывести в отдельной строке.
Формат входных данных
На вход программе подается одна строка.
Формат выходных данных
Программа должна вывести текст в соответствии с условием задачи.
Sample Input: C:\Windows\System32\calc.exe
Sample Output:
    C:
    Windows
    System32
    calc.exe
"""
print(*input().split('\\'), sep='\n')


""" Упражнение 4
На вход программе подается строка текста, содержащая целые числа. Напишите программу, которая по заданным числам строит 
столбчатую диаграмму.
Формат входных данных
На вход программе подается строка текста, содержащая целые числа, разделенных символом пробела.
Формат выходных данных
Программа должна вывести столбчатую диаграмму.
Sample Input 1: 1 2 3 4 5
Sample Output 1:
    +
    ++
    +++
    ++++
    +++++
"""
print(*['+' * int(x) for x in input().split()], sep='\n')


""" Упражнение 5
На вход программе подается строка текста, содержащая 4 целых числа разделенных точкой. Напишите программу, которая 
определяет является ли введенная строка текста корректным ip-адресом.
Формат входных данных
На вход программе подается строка текста, содержащая 4 целых числа разделенных точкой.
Формат выходных данных
Программа должна вывести «ДА», если введеная строка является корректным ip-адресом, и «НЕТ» — в противном случае.
Примечание. ip-адрес является корректным, если все 4 числа находятся в диапазоне от 0 до 255 включительно.
Sample Input 1: 192.168.0.3
Sample Output 1: ДА
Sample Input 2: 192.168.0.300
Sample Output 2: НЕТ
"""
flag = True
for x in input().split('.'):
    if int(x) < 0 or int(x) > 255:
        flag = False
print('ДА' if flag else 'НЕТ')

""" Упражнение 6
На вход программе подается строка текста и строка разделитель. Напишите программу, которая вставляет указанный 
разделитель между каждым символом введенной строки текста.
Формат входных данных
На вход программе подается строка текста и строка разделитель, каждая на отдельной строке
Формат выходных данных
Программа должна вывести текст в соответствии с условием задачи.
Sample Input 1:
    1234567
    *
Sample Output 1:
    1*2*3*4*5*6*7
"""
a = list(input())
print(input().join(a))


""" Упражнение 7
На вход программе подается строка текста, содержащая натуральные числа. Из данной строки формируется список чисел. 
Напишите программу, которая подсчитывает, сколько в полученном списке пар элементов, равных друг другу. Считается, 
что любые два элемента, равные друг другу образуют одну пару, которую необходимо посчитать.
Формат входных данных
На вход программе подается строка текста, содержащая натуральные числа, отделенные символом пробела.
Формат выходных данных
Программа должна вывести одно число – количество пар элементов, равных друг другу.
Sample Input 1: 1 7 5 7 5
Sample Output 1: 2
Sample Input 2: 3 3 3 3 3
Sample Output 2: 10
Sample Input 3: 8 7 6
Sample Output 3: 0
"""
a = input().split()
c = 0
for i in range(len(a)-1):
    for n in range(i+1, len(a)):
        if a[i] == a[n]:
            c += 1
print(c)

""" Упражнение 1
Дополните приведенный код, используя списочное выражение так, чтобы получить новый список, содержащий строки исходного
списка с удаленным первым символом.
"""
keywords = ['False', 'True', 'None', 'and', 'with', 'as', 'assert', 'break', 'class', 'continue', 'def', 'del', 'elif',
            'else', 'except', 'finally', 'try', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda',
            'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'while', 'yield']
new_keywords = [x[1:] for x in keywords]
print(new_keywords)


""" Упражнение 2
Дополните приведенный код, используя списочное выражение, так чтобы получить новый список, содержащий длины строк 
исходного списка.
"""
keywords = ['False', 'True', 'None', 'and', 'with', 'as', 'assert', 'break', 'class', 'continue', 'def', 'del', 'elif',
            'else', 'except', 'finally', 'try', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda',
            'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'while', 'yield']
lengths = [len(x) for x in keywords]
print(lengths)


""" Упражнение 3
Дополните приведенный код списочным выражением, чтобы получить новый список, содержащий только слова длиной не менее 
пяти символов (включительно).
"""
keywords = ['False', 'True', 'None', 'and', 'with', 'as', 'assert', 'break', 'class', 'continue', 'def', 'del', 'elif',
            'else', 'except', 'finally', 'try', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda',
            'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'while', 'yield']
new_keywords = [x for x in keywords if len(x) >= 5]
print(new_keywords)


""" Упражнение 4
Дополните приведенный код, используя списочное выражение, так чтобы получить список всех чисел палиндромов 
от 100 до 1000.
"""
palindromes = [x for x in range(100, 1001) if str(x) == str(x)[::-1]]
print(palindromes)


""" Упражнение 5
На вход программе подается натуральное число nn. Напишите программу, использующую списочное выражение, которая создает 
список содержащий квадраты чисел от 11 до nn, а затем выводит его элементы построчно, то есть каждый на отдельной 
строке.
Формат входных данных
На вход программе подается натуральное число.
Формат выходных данных
Программа должна вывести текст в соответствии с условием задачи.
Примечание. Для вывода элементов списка используйте цикл for.
Sample Input:
    5
Sample Output:
    1
    4
    9
    16
    25
"""
print(*[x**2 for x in range(1, int(input())+1)], sep='\n')


""" Упражнение 6
На вход программе подается строка текста, содержащая целые числа. Напишите программу, использующую списочное выражение, 
которая выведет кубы указанных чисел также на одной строке.
Формат входных данных
На вход программе подается строка текста, содержащая целые числа, разделенные символом пробела.
Формат выходных данных
Программа должна вывести текст в соответствии с условием задачи.
Примечание 1. Для вывода элементов списка используйте цикл for.
Примечание 2. Используйте метод split().
Sample Input 1: 2 4 3
Sample Output 1: 8 64 27
Sample Input 2: -2 -5 0
Sample Output 2: -8 -125 0
"""

""" Упражнение 7
На вход программе подается строка текста, содержащая слова. Напишите программу, которая выводит слова введенной 
строки в столбик.
Формат входных данных
На вход программе подается строка текста, содержащая слова, разделенные символом пробела.
Формат выходных данных
Программа должна вывести текст в соответствии с условием задачи.
Примечание. Программу можно написать в одну строку кода.
Sample Input: Умей ценить того кто без тебя не может
Sample Output:
    Умей
    ценить
    того
    кто
    без
    тебя
    не
    может
"""
print(*[x for x in input().split()], sep='\n')


""" Упражнение 8
На вход программе подается строка текста. Напишите программу, использующую списочное выражение, которая выводит все 
цифровые символы данной строки.
Формат входных данных
На вход программе подается строка текста.
Формат выходных данных
Программа должна вывести текст в соответствии с условием задачи.
Примечание. Программу можно написать в одну строку кода.
Sample Input 1: Число Pi примерно равно 3.1415
Sample Output 1: 31415
Sample Input 2: 123Python awesome!56
Sample Output 2: 12356
"""
print(*[x for x in input() if x.isdigit()], sep='')


""" Упражнение 9
На вход программе подается строка текста, содержащая целые числа. Напишите программу, использующую списочное выражение, 
которая выведет квадраты четных чисел, которые не оканчиваются на цифру 44.
Формат входных данных
На вход программе подается строка текста, содержащая целые числа, разделенные символом пробела.
Формат выходных данных
Программа должна вывести текст в соответствии с условием задачи.
Примечание. Программу можно написать в одну строку кода.
Sample Input 1: 1 2 3 4 5 6 7 8 9
Sample Output 1: 16 36
Sample Input 2: 4 4 10 6 4
Sample Output 2: 16 16 100 36 16
"""
print(*[x**2 for x in map(int, input().split()) if x % 2 == 0 and str(x**2)[-1] != '4'])

""" Упражнение 1
Напишите программу, которая выводит на экран текст «Здравствуй, мир!» (без кавычек).
Примечание 1. Проверяющая система будет сравнивать результат вашей программы и правильный ответ посимвольно.
Это означает, что выводить нужно ровно такую строку, которая указана в условии задачи.
Примечание 2. Проверяющая система пользуется стандартным выводом (stdout, команда print()).
Sample Input:
Sample Output: Здравствуй, мир!
"""
print('Здравствуй, мир!')


""" Упражнение 2
В популярном сериале «Остаться в живых» использовалась последовательность чисел 4 8 15 16 23 42, которая принесла 
героям удачу и помогла сорвать джекпот в лотерее. Напишите программу, которая выводит данную последовательность чисел с 
одним пробелом между ними.
Примечание. Текст '4 8 15 16 23 42' не использовать. Воспользуйтесь возможностью команды print() выводить несколько 
аргументов, указанных через запятую.
Sample Input:
Sample Output: 4 8 15 16 23 42
"""
print(4, 8, 15, 16, 23, 42)


""" Упражнение 3
Измените предыдущую программу так, чтобы каждое число последовательности 4 8 15 16 23 42 печаталось на отдельной строке.
Примечание. Каждая последующая команда print() выводит указанный текст, начиная с новой строки.
Sample Input:
Sample Output: 4 / 8 / 15 / 16 / 23 / 42
"""
print(4, 8, 15, 16, 23, 42, sep='\n')


""" Упражнение 4
Напишите программу, которая выводит указанный треугольник, состоящий из звездочек (*).
Sample Input:
Sample Output:
    *
    **
    ***
    ****
    *****
    ******
    *******
"""
print(*('*' * x for x in range(1, 8)), sep='\n')


""" Упражнение 5
На вход программе подается строка текста – имя человека. Напишите программу, которая выводит на экран приветствие в виде 
слова «Привет» (без кавычек), после которого должна стоять запятая и пробел, а затем введенное имя.
Формат входных данных
На вход программе подаётся одна строка — имя человека.
Формат выходных данных
Программа должна вывести текст в соотвествии с условием задачи.
Примечание. Для считывания текста используйте команду input(), для печати текста на экране используйте команду print().
Sample Input 1: Тимур
Sample Output 1: Привет, Тимур
Sample Input 2: Гвидо
Sample Output 2: Привет, Гвидо
"""
print('Привет,', input())


""" Упражнение 6
На вход программе подается строка текста – название футбольной команды. Напишите программу, которая повторяет ее на 
экране со словами « - чемпион!» (без кавычек).
Формат входных данных
На вход программе подается название футбольной команды.
Формат выходных данных
Программа должна вывести текст согласно условиям задачи.
Примечание. Для считывания текста используйте команду input(), для печати текста на экране используйте команду print().
Sample Input: Барселона
Sample Output: Барселона - чемпион!
"""
print(input(), '- чемпион!')


""" Упражнение 7
Напишите программу, которая считывает три строки по очереди, а затем выводит их в той же последовательности, каждую на 
отдельной строчке.
Формат входных данных
На вход программе подаются три строки, каждая на отдельной строке.
Формат выходных данных
Программа должна вывести введенные строки в той же последовательности, каждую на отдельной строке.
Примечание. Для считывания текста используйте команду input(), для печати текста на экране используйте команду print().
Sample Input 1:
    I was
    born
    this way
Sample Output 1:
    I was
    born
    this way
Sample Input 2:
    I love
    Python
    so much
Sample Output 2:
    I love
    Python
    so much
"""
l = list(map(lambda x: input(), range(3)))
print(*l, sep='\n')


""" Упражнение 8
Напишите программу, которая считывает три строки по очереди, а затем выводит их в обратной последовательности, каждую на 
отдельной строчке.
Формат входных данных
На вход программе подается три строки, каждая на отдельной строке.
Формат выходных данных
Программа должна вывести введенные строки в обратной последовательности, каждую на отдельной строке.
Примечание. Используйте 3 переменные для сохранения введённых строк текста.
Sample Input 1:
    Hello
    it's
    me
Sample Output 1:
    me
    it's
    Hello
Sample Input 2:
    I love
    Python
    so much
Sample Output 2:
    so much
    Python
    I love
"""
l = reversed(list(map(lambda x: input(), range(3))))
print(*l, sep='\n')

""" Упражнение 1
Зум бросил вызов Флэшу и предложил ему честный поединок в виде гонки вокруг магнетара. В случае проигрыша эта нейтронная
звезда зарядится и уничтожит мир, поэтому Флэш решил не рисковать без причины, и узнать у своего друга Циско Рамона
есть ли смысл принимать вызов. Циско получил данные, что скорость Зума равна n, а скорость Флэша равна k.
Напишите программу, которая должна вывести ответ Циско на вопрос Флэша.
Формат входных данных
На вход программе подаётся два целых числа n и k, скорость Зума и Флэша.
Формат выходных данных
Если Зум быстрее Флэша нужно вывести «NO», если Флэш быстрее Зума нужно вывести «YES», если их скорости равны нужно
вывести "Don't know".
Sample Input 1:
    2204
    1505
Sample Output 1: NO
Sample Input 2:
    2344
    4324
Sample Output 2: YES
Sample Input 3:
    2500
    2500
Sample Output 3: Don't know
"""
a, b = int(input()), int(input())
if a > b:
    print('NO')
elif a < b:
    print('YES')
else:
    print("Don't know")


""" Упражнение 2
Напишите программу, которая принимает три положительных числа и определяет вид треугольника, длины сторон которого равны 
введенным числам.
Формат входных данных
На вход программе подаются три числа – длины сторон существующего треугольника.
Формат выходных данных
Программа должна вывести на экран текст – вид треугольника («Равносторонний», «Равнобедренный» или «Разносторонний»).
Sample Input 1:
    145
    145
    139
Sample Output 1: Равнобедренный
Sample Input 2:
    59
    59
    59
Sample Output 2: Равносторонний
Sample Input 3:
    890
    199
    700
Sample Output 3: Разносторонний
"""
a, b, c = map(lambda x: int(input()), range(3))
if a == b == c:
    print('Равносторонний')
elif a == b or a == c or b == c:
    print('Равнобедренный')
else:
    print('Разносторонний')


""" Упражнение 3
Даны три различных целых числа. Напишите программу, которая находит среднее по величине число.
Формат входных данных
На вход программе подаётся три различных целых числа, каждое на отдельной строке.
Формат выходных данных
Программа должна вывести среднее число.
Примечание. Средним называется число, которое будет вторым, если три числа отсортировать в порядке возрастания.
Sample Input 1:
    1
    2
    3
Sample Output 1: 2
Sample Input 2:
    10
    30
    20
Sample Output 2: 20
Sample Input 3:
    67
    100
    54
Sample Output 3: 67
Sample Input 4:
    54
    34
    33
Sample Output 4: 34
"""
print(sorted(map(lambda x: int(input()), range(3)))[1])


""" Упражнение 4
Дан порядковый номер месяца (1,2,…, 12). Напишите программу, которая выводит на экран количество дней в этом месяце. 
Принять, что год является невисокосным.
Примечание. Постарайтесь написать программу, так чтобы в ней было не более трех условий.
Формат входных данных
На вход программе подаётся одно целое число – порядковый номер месяца.
Формат выходных данных
Программа должна вывести количество дней в этом месяце.
Sample Input 1: 12
Sample Output 1: 31
Sample Input 2: 5
Sample Output 2: 31
Sample Input 3: 2
Sample Output 3:28
"""
a = int(input())
if a in (1, 3, 5, 7, 8, 10, 12):
    print(31)
elif a in (4, 6, 9, 11):
    print(30)
else:
    print(28)


""" Упражнение 5
Известен вес боксера-любителя (целое число). Известно, что вес таков, что боксер может быть отнесён к одной из трех 
весовых категорий:
    Легкий вес – до 60 кг;
    Первый полусредний вес – до 64 кг;
    Полусредний вес – до 69 кг.
Напишите программу, определяющую, в какой категории будет выступать данный боксер.
Формат входных данных
На вход программе подаётся одно целое число.
Формат выходных данных
Программа должна вывести текст – название весовой категории.
Sample Input 1: 55
Sample Output 1: Легкий вес
Sample Input 2: 68
Sample Output 2: Полусредний вес
Sample Input 3: 60
Sample Output 3: Первый полусредний вес
"""
a = int(input())
if a < 60:
    print('Легкий вес')
elif 60 <= a < 64:
    print('Первый полусредний вес')
else:
    print('Полусредний вес')


""" Упражнение 6
Самописный калькулятор
Напишите программу, которая считывает с клавиатуры два целых числа и строку. Если эта строка является обозначением одной
из четырёх математических операций (+, -, *, /), то выведите результат применения этой операции к введённым ранее 
числам, в противном случае выведите «Неверная операция». Если пользователь захочет поделить на ноль, выведите текст 
«На ноль делить нельзя!».
Формат входных данных
На вход программе подаются два целых числа, каждое на отдельной строке, и строка.
Формат выходных данных
Программа должна вывести результат применения операции к введенным числам или соответствующий текст, если операция 
неверная либо если происходит деление на ноль.
Sample Input 1:
    6104
    0
    /
Sample Output 1: На ноль делить нельзя!
Sample Input 2:
    25
    5
    *
Sample Output 2: 125
Sample Input 3:
    89
    80
    -
Sample Output 3: 9
Sample Input 4:
    567
    433
    +
Sample Output 4: 1000
"""
a, b, c = int(input()), int(input()), input()
if b == 0 and c == '/':
    print('На ноль делить нельзя!')
else:
    if c in ('+', '-', '*', '/'):
        if c == '+':
            print(a+b)
        elif c == '-':
            print(a-b)
        elif c == '*':
            print(a*b)
        else:
            print(a/b)
    else:
        print('Неверная операция')


""" Упражнение 7
Красный, синий и желтый называются основными цветами, потому что их нельзя получить путем смешения других цветов. 
При смешивании двух основных цветов получается вторичный цвет:
    если смешать красный и синий, то получится фиолетовый;
    если смешать красный и желтый, то получится оранжевый;
    если смешать синий и желтый, то получится зеленый.
Напишите программу, которая считывает названия двух основных цветов для смешивания. Если пользователь вводит что-нибудь 
помимо названий «красный», «синий» или «желтый», то программа должна вывести сообщение об ошибке. В противном случае 
программа должна вывести название вторичного цвета, который получится в результате.
Формат входных данных
На вход программе подаются две строки, каждая на отдельной строке.
Формат выходных данных
Программа должна вывести полученный цвет смешения либо сообщение «ошибка цвета», если введён был не цвет.
Примечание 1. Если смешать красный и красный, то получится красный и т.д.
Примечание 2. Поиграйтесь с настоящим цветовым микшером 🙂
Sample Input 1:
    красный
    синий
Sample Output 1:
    фиолетовый
Sample Input 2:
    красный
    блаблабла
Sample Output 2:
    ошибка цвета
"""
color = ('красный', 'синий', 'желтый')
mix = ('фиолетовый', 'оранжевый', 'зеленый')
a, b = input(), input()
if a in color and b in color:
    if a == b:
        print(a)
    else:
        print(mix[color.index(a) + color.index(b) - 1])
else:
    print('ошибка цвета')


""" Упражнение 8
На колесе рулетки карманы пронумерованы от 0 до 36. Ниже приведены цвета карманов: 
карман 0 зеленый;
для карманов с 1 по 10 карманы с нечетным номером имеют красный цвет, карманы с четным номером – черный;
для карманов с 11 по 18 карманы с нечетным номером имеют черный цвет, карманы с четным номером – красный;
для карманов с 19 по 28 карманы с нечетным номером имеют красный цвет, карманы с четным номером – черный;
для карманов с 29 по 36 карманы с нечетным номером имеют черный цвет, карманы с четным номером – красный.
Напишите программу, которая считывает номер кармана и показывает, является ли этот карман зеленым, красным или черным. 
Программа должна вывести сообщение об ошибке, если пользователь вводит число, которое лежит вне диапазона от 0 до 36.
Формат входных данных
На вход программе подаётся одно целое число.
Формат выходных данных
Программа должна вывести цвет кармана либо сообщение «ошибка ввода», если введённое число лежит вне диапазона от 0 до 36.
Sample Input 1: 0
Sample Output 1: зеленый
Sample Input 2: 1
Sample Output 2: красный
Sample Input 3: 37
Sample Output 3: ошибка ввода
"""
a = int(input())
if a == 0:
    print('зеленый')
elif a < 0 or a > 36:
    print('ошибка ввода')
else:
    if 1 <= a <= 10 or 19 <= a <= 28:
        print('черный' if a % 2 == 0 else 'красный')
    else:
        print('красный' if a % 2 == 0 else 'черный')


""" Упражнение 9
На числовой прямой даны два отрезка: [a_1; b_1] и [a_2; b_2]
Напишите программу, которая находит их пересечение.
Пересечением двух отрезков может быть:
    отрезок;
    точка;
    пустое множество.
    Формат входных данных
На вход программе подаются 4 целых числа a_1, b_1, a_2, b_2a, каждое на отдельной строке. 
Гарантируется, что a_1 < b_1a и a_2 < b_2a 
Формат выходных данных
Программа должна вывести на экран границы отрезка, являющегося пересечением, либо общую точку, либо текст «пустое множество».
Sample Input 1:
    1
    3
    2
    4
Sample Output 1:
    2 3
Sample Input 2:
    1
    2
    3
    4
Sample Output 2:
    пустое множество
Sample Input 3:
    5
    6
    6
    8
Sample Output 3:
    6
"""
a, b, c, d = map(lambda x: int(input()), range(4))
m = sorted({*range(a, b+1)} & {*range(c, d+1)})
if m:
    print(f'{m[0]} {m[-1]}' if m[0] != m[-1] else m[0])
else:
    print("пустое множество")

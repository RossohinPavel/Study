""" Упражнение 1
На вход программе подается четное число n, n≥2. Напишите программу, которая выводит список четных чисел
[2, 4, 6, ..., n].
Формат входных данных
На вход программе подается четное натуральное число.
Формат выходных данных
Программа должна вывести текст в соответствии с условием задачи.
"""
print([x for x in range(2, int(input())+1, 2)])


""" Упражнение 2
На вход программе подаются две строки текста, содержащие целые числа. Из данных строк формируются списки чисел L и M. 
Напишите программу, которая создает третий список, элементами которого являются суммы соответствующих элементов 
списков L и M. Далее программа должна вывести каждый элемент полученного списка на одной строке через 1 пробел.
Формат входных данных
На вход программе подаются две строки текста, содержащие целые числа, разделенные символом пробела.
Формат выходных данных
Программа должна вывести текст в соответствии с условием задачи.
Примечание. Количество чисел в обеих строках одинаковое.
Sample Input 1:
    3 1 4
    1 5 9
Sample Output 1:
    4 6 13
Sample Input 2:
    1 1 1 1 1 1
    9 9 9 9 9 9
Sample Output 2:
    10 10 10 10 10 10
"""
L, M = list(map(int, input().split())), list(map(int, input().split()))
print(*[L[x]+M[x] for x in range(len(L))])


""" Упражнение 3
На вход программе подается строка текста, содержащая натуральные числа. Напишите программу, которая вставляет между 
каждым числом знак +, а затем вычисляет сумму полученных чисел.
Формат входных данных
На вход программе подается строка текста, содержащая натуральные числа, разделенные символом пробела.
Формат выходных данных
Программа должна вывести текст в соответствии с условием задачи.
Примечание. Строковый метод join() работает только со списком строк.
Sample Input 1: 2 5 11 33 55
Sample Output 1:2+5+11+33+55=106
Sample Input 2: 1 1 1
Sample Output 2: 1+1+1=3
"""
l = input().split()
print('+'.join(l) + '=' + str(sum([int(x) for x in l])))


""" Упражнение 4
На вход программе подается строка текста. Напишите программу, которая определяет является ли введенная строка корректным 
телефонным номером. Строка текста является корректным телефонным номером если она имеет формат:
    abc-def-hijk или
    7-abc-def-hijk
где a, b, c, d, e, f, h, i, j, k – цифры от 0 до 9.
Формат входных данных 
На вход программе подается строка текста.
Формат выходных данных
Программа должна вывести «YES» если строка является корректным телефонным номером и «NO» в противном случае.
Примечание. Телефонный номер должен содержать только цифры и символ -, а количество цифр в каждой группе должны быть правильным.
Sample Input 1: 7-301-447-5820
Sample Output 1: YES
Sample Input 2: 301-447-5820
Sample Output 2: YES
Sample Input 3: 301-4477-5820
Sample Output 3: NO
"""
import re
a = input()
if re.fullmatch(r'7-\d{3}-\d{3}-\d{4}', a) or re.fullmatch( r'\d{3}-\d{3}-\d{4}', a):
    print('YES')
else:
    print('NO')


""" Упражнение 5
На вход программе подается строка текста. Напишите программу, использующую списочное выражение, которая находит длину 
самого длинного слова.
Формат входных данных
На вход программе подается строка текста.
Формат выходных данных
Программа должна вывести текст в соответствии с условием задачи.
Sample Input: проспал почти всю ночь
Sample Output: 7
"""
print(max([len(x) for x in input().split()]))


""" Упражнение 6
На вход программе подается строка текста. Напишите программу, использующую списочное выражение, которая преобразует 
каждое слово введенного текста в "молодежный жаргон" по следующему правилу: 
первая буква каждого слова удаляется и ставится в конец слова; 
затем в конец слова добавляется слог "ки".
Формат входных данных
На вход программе подается строка текста на русском языке.
Формат выходных данных
Программа должна вывести текст в соответствии с условием задачи.
Sample Input: проспал почти всю ночь
Sample Output: роспалпки очтипки сювки очьнки
"""
print(*[f'{x[1:]}{x[0]}ки' for x in input().split()])

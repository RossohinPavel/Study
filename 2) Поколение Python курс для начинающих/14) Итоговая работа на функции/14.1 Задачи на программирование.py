""" Упражнение 1
Напишите функцию draw_triangle(), которая выводит звездный равнобедренный треугольник с основанием и высотой
равными 15 и 8 соответственно:
       *
      ***
     *****
    *******
   *********
  ***********
 *************
***************
Примечание 1 . Для вывода треугольника используйте цикл for.
Примечание 2 . Справа от звездочек пробелов нет.
"""
def draw_triangle():
    p = 7
    for i in range(8):
        print(' ' * p + '*' * i + '*' + '*' * i)
        p -= 1
draw_triangle()


""" Упражнение 2
Интернет магазин осуществляет экспресс доставку для своих товаров по цене 1000 рублей за первый товар и 120 рублей 
за каждый последующий товар. Напишите функцию get_shipping_cost(quantity), которая принимает в качестве аргумента 
натуральное число quantity – количество товаров в заказе и возвращает стоимость доставки.
Примечание. Следующий программный код:
    print(get_shipping_cost(1))
    print(get_shipping_cost(3))
должен выводить:
    1000
    1240
"""
def get_shipping_cost(quantity):
    s = 1000
    for _ in range(1, quantity):
        s += 120
    return s
n = int(input())
print(get_shipping_cost(n))


""" Упражнение 3
Напишите функцию compute_binom(n, k), которая принимает в качестве аргументов два натуральных числа n и k и возвращает 
значение биномиального коэффициента, равного.
Примечание 1. Факториалом натурального числа nn, называется произведение всех натуральных чисел от 1 до n, то есть 
n!=1⋅2⋅3⋅…⋅n
Примечание 2. Реализуйте вспомогательную функцию factorial(n), вычисляющую факториал числа или воспользуйтесь уже 
готовой функцией из модуля math.
"""
def factorial(n):
    x = 1
    for i in range(1, n+1):
        x *= i
    return x
def compute_binom(n, k):
    return int((factorial(n)) / (factorial(k)*factorial(n-k)))
n = int(input())
k = int(input())
print(compute_binom(n, k))


""" Упражнение 4
Напишите функцию number_to_words(num), которая принимает в качестве аргумента натуральное число num и возвращает его 
словесное описание на русском языке.
Примечание 1. Считайте, что число 1≤num ≤99.
Примечание 2. Следующий программный код:
    print(number_to_words(7))
    print(number_to_words(85))
должен выводить:
    семь
    восемьдесят пять
"""
d = {1: 'один', 2: 'два', 3: 'три', 4: 'четыре', 5: 'пять', 6: 'шесть', 7: 'семь', 8: 'восемь', 9: 'девять',
     10: 'десять', 11: 'одиннадцать', 12: 'двенадцать', 13: 'тринадцать', 14: 'четырнадцать', 15: 'пятнадцать',
     16: 'шестнадцать',17: 'семнадцать', 18: 'восемнадцать', 19: 'девятнадцать', 20: 'двадцать', 30: 'тридцать',
     40: 'сорок', 50: 'пятьдесят', 60: 'шестьдесят', 70: 'семьдесят', 80: 'восемьдесят', 90: 'девяносто'}
def number_to_words(num):
    if 1 <= num <= 19 or num in (20, 30, 40, 50, 60, 70, 80, 90):
        return d[num]
    else:
        des = num // 10 * 10
        ed = num % 10
        return f'{d[des]} {d[ed]}'
n = int(input())
print(number_to_words(n))


""" Упражнение 5
Напишите функцию get_month(language, number), которая принимает на вход два аргумента language – язык ru или en и 
number – номер месяца (от 1 до 12) и возвращает название месяца на русском или английском языке.
Примечание. Следующий программный код:
    print(get_month('ru', 1))
    print(get_month('ru', 12))
    print(get_month('en', 1))
    print(get_month('en', 10))
должен выводить:
    январь
    декабрь
    january
    october
"""
lng_ru = ['январь', 'февраль', 'март', 'апрель', 'май', 'июнь', 'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь',
          'декабрь']
lng_en = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november',
          'december']
def get_month(language, number):
    if language == 'ru':
        return lng_ru[number - 1]
    else:
        return lng_en[number - 1]
lan = input()
num = int(input())
print(get_month(lan, num))


""" Упражнение 6
Магическая дата – это дата, когда день, умноженный на месяц, равен числу образованному последними двумя цифрами года.
Напишите функцию, is_magic(date) которая принимает в качестве аргумента строковое представление корректой даты и 
возвращает значение True если дата является магической и False в противном случае.
Примечание. Следующий программный код:
    print(is_magic('10.06.1960'))
    print(is_magic('11.06.1960'))
должен выводить:
    True
    False
"""
def is_magic(date):
    return int(date[:2])*int(date[3:5]) == int(date[-2:])
date = input()
print(is_magic(date))


""" Упражнение 7
Панграмма – это фраза, содержащая в себе все буквы алфавита. Обычно панграммы используют для презентации шрифтов, чтобы 
можно было в одной фразе рассмотреть все глифы.
Напишите функцию, is_pangram(text) которая принимает в качестве аргумента строку текста на английском языке и возвращает 
значение True если текст является панграммой и False в противном случае.
Примечание 1. Гарантируется, что введенная строка содержит только буквы английского алфавита.
Примечание 2. Следующий программный код:
    print(is_pangram('Jackdaws love my big sphinx of quartz'))
    print(is_pangram('The jay pig fox zebra and my wolves quack'))
    print(is_pangram('Hello world'))
должен выводить:
    True
    True
    False
"""


def is_pangram(text):
    text = set([x.lower() for x in text if x.isalpha()])
    return len(text) == 26
text = input()
print(is_pangram(text))

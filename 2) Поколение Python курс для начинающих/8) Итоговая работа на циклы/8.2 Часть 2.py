""" Упражнение 1
На обработку поступает натуральное число. Нужно написать программу, которая выводит на экран сумму чётных цифр этого
числа или 0, если чётных цифр в записи нет. Программист торопился и написал программу неправильно.
Найдите все ошибки в этой программе (их может быть одна или несколько). Известно, что каждая ошибка затрагивает только
одну строку и может быть исправлена без изменения других строк.
Примечание. Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно,
использующую другой алгоритм решения.
"""
n = int(input())
s = 0
while n > 0:
    x = n % 10
    if x % 2 == 0:
        s += x
    n //= 10
print(s)


""" Упражнение 2
На обработку поступает последовательность из 8 целых чисел. Известно, что вводимые числа по абсолютной величине не 
превышают 10^12. Нужно написать программу, которая выводит на экран количество делящихся нацело на 4 чисел в исходной 
последовательности и максимальное делящееся нацело на 4 число. Если делящихся нацело на 4 чисел нет, требуется на экран 
вывести «NO». Программист торопился и написал программу неправильно.
Найдите все ошибки в этой программе (их может быть одна или несколько). Известно, что каждая ошибка затрагивает только 
одну строку и может быть исправлена без изменения других строк.
Примечание. Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, 
использующую другой алгоритм решения.
"""
n = 8
count = 0
maximum = -10**12-1
for i in range(n):
    x = int(input())
    if x % 4 == 0:
        count += 1
        if x > maximum:
            maximum = x
if count > 0:
    print(count)
    print(maximum)
else:
    print('NO')


""" Упражнение 3
На обработку поступает последовательность из 4 целых чисел. Известно, что вводимые числа по абсолютной величине 
не превышают 10^8. Нужно написать программу, которая выводит на экран количество нечётных чисел в исходной 
последовательности и максимальное нечётное число. Если нечётных чисел нет, требуется на экран вывести «NO». Программист 
торопился и написал программу неправильно.
Найдите все ошибки в этой программе (их может быть одна или несколько). Известно, что каждая ошибка затрагивает только 
одну строку и может быть исправлена без изменения других строк.
Примечание. Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, 
использующую другой алгоритм решения.
"""
n = 4
count = 0
maximum = -10**8-1
for i in range(n):
    x = int(input())
    if x % 2 == 1:
        count += 1
        if x > maximum:
            maximum = x
if count > 0:
    print(count)
    print(maximum)
else:
    print('NO')


""" Упражнение 4
На вход программе подается натуральное число nn. Напишите программу, которая печатает звездную рамку размерами n 19n×19.
Формат входных данных
На вход программе подаётся натуральное число n∈[3;19] — высота звездной рамки.
Формат выходных данных
Программа должна вывести звездную рамку размерами n 19n×19.
Подсказка. Для печати звездной линии используйте умножение строки на число.
Sample Input 1: 3
Sample Output 1:
    *******************
    *                 *
    *******************
Sample Input 2: 4
Sample Output 2:
    *******************
    *                 *
    *                 *
    *******************
"""
a = int(input())
print('*'*19)
for i in range(1, a-1):
    print('*'+' '*17+'*')
print('*'*19)


""" Упражнение 5
Дано натуральное число n (n>99). Напишите программу, которая определяет его третью (с начала) цифру.
Формат входных данных 
На вход программе подается одно натуральное число, состоящее как минимум из трех цифр.
Формат выходных данных
Программа должна вывести его третью (с начала) цифру.
Sample Input 1: 100000000
Sample Output 1: 0
Sample Input 2: 3459087654
Sample Output 2: 5
Sample Input 3: 134
Sample Output 3: 4
"""
a = input()
print(a[2])


""" Упражнение 6
Дано натуральное число. Напишите программу, которая вычисляет:
    количество цифр 3 в нем;
    сколько раз в нем встречается последняя цифра;
    количество четных цифр;
    сумму его цифр, больших пяти;
    произведение цифр, больших семи (если цифр больших семи нет, то вывести 1, если такая цифра одна, то вывести ее);
    сколько раз в нем встречается цифры 0 и 5 (всего суммарно).
Формат входных данных 
На вход программе подается одно натуральное число.
Формат выходных данных
Программа должна вывести значения указанных величин в указанном порядке.
Sample Input 1: 56639
Sample Output 1:
    1
    1
    2
    21
    9
    1
"""
a = input()
c_e = 0
s_b5 = 0
p_b7 = 1
c_05 = 0
for i in a:
    x = int(i)
    if x % 2 == 0:
        c_e += 1
    if x > 5:
        s_b5 += x
    if x > 7:
        p_b7 *= x
    if x == 5 or x == 0:
        c_05 += 1
print(a.count('3'))
print(a.count(a[-1]))
print(c_e, s_b5, p_b7, c_05, sep='\n')

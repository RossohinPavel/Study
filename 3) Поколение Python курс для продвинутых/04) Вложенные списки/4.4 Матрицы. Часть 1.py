""" Упражнение 1
На вход программе подаются два натуральных числа n и m, каждое на отдельной строке — количество строк
и столбцов в матрице. Далее вводятся сами элементы матрицы — слова, каждое на отдельной строке; подряд идут элементы
сначала первой строки, затем второй, и т.д.
Напишите программу, которая сначала считывает элементы матрицы один за другим, затем выводит их в виде матрицы.
Формат входных данных
На вход программе подаются два числа n и m — количество строк и столбцов в матрице, далее идут n×m слов,
каждое на отдельной строке.
Формат выходных данных
Программа должна вывести считанную матрицу, разделяя ее элементы одним пробелом.
Sample Input 1:
    4
    2
    и
    швец
    и
    жнец
    и
    на
    дуде
    игрец
Sample Output 1:
    и швец
    и жнец
    и на
    дуде игрец
"""
row, el = int(input()), int(input())
m = list(map(lambda _: [input() for _ in range(el)], range(row)))
for i in m:
    print(*i)


""" Упражнение 2
На вход программе подаются два натуральных числа nn и mm, каждое на отдельной строке — количество строк и столбцов в
матрице. Далее вводятся сами элементы матрицы — слова, каждое на отдельной строке; подряд идут элементы сначала 
первой строки, затем второй, и т.д.
Напишите программу, которая считывает элементы матрицы один за другим, выводит их в виде матрицы, выводит пустую строку, 
и снова ту же матрицу, но уже поменяв местами строки со столбцами: первая строка выводится как первый столбец, 
и так далее.
Формат входных данных
На вход программе подаются два числа nn и mm — количество строк и столбцов в матрице, далее идут n×m слов, 
каждое на отдельной строке.
Формат выходных данных
Программа должна вывести считанную матрицу, за ней пустую строку, и ту же матрицу, 
но поменяв местами строки со столбцами. Элементы матрицы разделять одним пробелом.
Sample Input 1:
    4
    2
    и
    швец
    и
    жнец
    и
    на
    дуде
    игрец
Sample Output 1:
    и швец
    и жнец
    и на
    дуде игрец

    и и и дуде
    швец жнец на игрец
"""
row, el = int(input()), int(input())
m = list(map(lambda _: [input() for _ in range(el)], range(row)))
for i in m:
    print(*i)
print()
for i in range(len(m[0])):
    for n in range(len(m)):
        print(m[n][i], end=' ')
    print()


""" Упражнение 3
Следом квадратной матрицы называется сумма элементов главной диагонали. Напишите программу, 
которая выводит след заданной квадратной матрицы.
Формат входных данных
На вход программе подаётся натуральное число nn — количество строк и столбцов в матрице, 
затем элементы матрицы (целые числа) построчно через пробел.
Формат выходных данных
Программа должна вывести одно число — след заданной матрицы.
Sample Input 1:
    3
    1 2 3
    4 5 6
    7 8 9
Sample Output 1:
    15
Sample Input 2:
    4
    1 0 0 0
    0 1 0 0
    0 0 1 0
    0 0 0 1
Sample Output 2:
    4
"""
n = int(input())
c = 0
m = list(map(lambda _: list(map(int, input().split())), range(n)))
for i in range(n):
    c += m[i][i]
print(c)


""" Упражнение 4
Напишите программу, которая выводит количество элементов квадратной матрицы в каждой строке, больших среднего 
арифметического элементов данной строки.
Формат входных данных
На вход программе подаётся натуральное число nn — количество строк и столбцов в матрице, затем элементы матрицы 
(целые числа) построчно через пробел.
Формат выходных данных
Программа должна вывести nn чисел — для каждой строки количество элементов матрицы, больших среднего арифметического 
элементов данной строки.
Sample Input 1:
    4
    1 2 3 4
    5 6 3 15
    0 2 3 1
    5 2 8 5
Sample Output 1:
    2
    1
    2
    1
Sample Input 2:
    2
    5 6
    99 5
Sample Output 2:
    1
    1
"""
n = int(input())
m = list(map(lambda _: list(map(int, input().split())), range(n)))
for i in m:
    ar = sum(i) / len(i)
    c = 0
    for x in i:
        if x > ar:
            c += 1
    print(c)


""" Упражнение 5
Напишите программу, которая выводит максимальный элемент в заштрихованной области квадратной матрицы.
----------
|\\      |
|xxx\\   |
|xxxxxx\\|
----------
Формат входных данных
На вход программе подаётся натуральное число n — количество строк и столбцов в матрице, затем элементы матрицы 
(целые числа) построчно через пробел.
Формат выходных данных
Программа должна вывести одно число — максимальный элемент в заштрихованной области квадратной матрицы.
Примечание. Элементы главной диагонали также учитываются.
Sample Input 1:
    3
    1 4 5
    6 7 8
    1 1 6
Sample Output 1:
    7
Sample Input 2:
    4
    0 1 4 6
    0 0 2 5
    0 0 0 7
    0 0 0 0
Sample Output 2:
    0
"""
n = int(input())
m = list(map(lambda _: list(map(int, input().split())), range(n)))
temp = []
for i in range(len(m)):
    for x in range(0, i+1):
        temp.append(m[i][x])
print(max(temp))


""" Упражнение 6
Напишите программу, которая выводит максимальный элемент в заштрихованной области квадратной матрицы.
----------
|\\    //|
|xx\\//xx|
|xx//\\xx|
|//    \\|
----------
Формат входных данных
На вход программе подаётся натуральное число nn — количество строк и столбцов в матрице, затем элементы матрицы 
(целые числа) построчно через пробел.
Формат выходных данных
Программа должна вывести одно число — максимальный элемент в заштрихованной области квадратной матрицы.
Примечание. Элементы диагоналей также учитываются.
Sample Input 1:
    3
    1 4 5
    6 7 8
    1 1 6
Sample Output 1:
    8
Sample Input 2:
    4
    0 1 4 6
    0 0 2 5
    0 0 0 7
    0 0 0 0
Sample Output 2:
    7
"""
n = int(input())
m = list(map(lambda _: list(map(int, input().split())), range(n)))
temp = []
for i in range(n):
    for j in range(n):
        if i >= j and i <= n - 1 - j:
            temp.append(m[i][j])
        if i <= j and i >= n - 1 - j:
            temp.append(m[i][j])
print(max(temp))


""" Упражнение 7
Квадратная матрица разбивается на четыре четверти, ограниченные главной и побочной диагоналями: верхнюю, нижнюю, 
левую и правую.
Напишите программу, которая вычисляет сумму элементов: верхней четверти; правой четверти; нижней четверти; 
левой четверти.
Формат входных данных
На вход программе подаётся натуральное число nn — количество строк и столбцов в матрице, затем элементы матрицы 
(целые числа) построчно через пробел.
Формат выходных данных
Программа должна вывести текст в соответствии с условием задачи.
Примечание. Элементы диагоналей не учитываются.
Sample Input 1:
    4
    1 2 3 4
    5 6 7 8
    3 4 5 6
    1 2 3 4
Sample Output 1:
    Верхняя четверть: 5
    Правая четверть: 14
    Нижняя четверть: 5
    Левая четверть: 8
"""
n = int(input())
m = list(map(lambda _: list(map(int, input().split())), range(n)))
temp = [[], [], [], []]
for i in range(n):
    for j in range(n):
        if i < j and i < n - 1 - j:
            temp[0].append(m[i][j])
        if i < j and i > n - 1 - j:
            temp[1].append(m[i][j])
        if i > j and i > n - 1 - j:
            temp[2].append(m[i][j])
        if i > j and i < n - 1 - j:
            temp[3].append(m[i][j])

print(f'Верхняя четверть: {sum(temp[0])}', f'Правая четверть: {sum(temp[1])}',
      f'Нижняя четверть: {sum(temp[2])}', f'Левая четверть: {sum(temp[3])}', sep='\n')


""" Упражнение 1
Напишите программу, которая принимает произвольное количество строк и в каждой введенной строке располагает все символы
в обратном порядке.
Формат входных данных
На вход программе подается произвольное количество строк.
Формат выходных данных
Программа должна вывести все введенные строки, предварительно расположив в каждой строке все символы в обратном порядке.
Примечание 1. Порядок вывода строк должен совпадать с порядком их ввода.
Примечание 2. Если на вход программе ничего не подается, то она ничего не должна выводить.
Sample Input 1:
    Take all of my dreams
    Take off both your wings
    And set them on fire
    Set them on fire
Sample Output 1:
    smaerd ym fo lla ekaT
    sgniw ruoy htob ffo ekaT
    erif no meht tes dnA
    erif no meht teS
Sample Input 2:
    finn
    jake
    marceline
Sample Output 2:
    nnif
    ekaj
    enilecram
"""
import sys
for line in sys.stdin:
    print(line.strip('\n')[::-1])


""" Упражнение 2
Дана последовательность дат. Напишите программу, которая выводит количество дней между максимальной и минимальной датами 
данной последовательности.
Формат входных данных
На вход программе подается произвольное количество строк, в каждой строке записана дата в ISO формате (YYYY-MM-DD).
Формат выходных данных
Программа должна вывести единственное число — количество дней между максимальной и минимальной датами введенной 
последовательности.
Sample Input 1:
    2022-06-15
    2022-06-12
    2022-06-16
    2022-06-30
Sample Output 1:
    18
Sample Input 2:
    2077-01-01
    2077-01-01
    2077-01-01
Sample Output 2:
    0
"""
import datetime as dt
import sys
lst = [dt.datetime.strptime(dat.strip('\n'), '%Y-%m-%d') for dat in sys.stdin]
print((max(lst) - min(lst)).days)


""" Упражнение 3
Анри и Дима, имея на руках ящик с бесконечным количеством носков, решили сыграть в игру. Ребята по очереди достают из 
ящика произвольное количество носков, и после неопределенного числа ходов игра заканчивается. Если тот, кто сделал 
последний ход, вытащил четное количество носков — он побеждает, в противном случае проигрывает.
Напишите программу, которая определяет победителя в данной игре, если первый ход делает Анри.
Формат входных данных
На вход программе подается произвольное количество строк, в каждой строке записано натуральное число — количество 
носков, которые вытащил один из игроков.
Формат выходных данных
Программа должна определить победителя в игре, правила которой представлены в условии задачи, и вывести его имя.
Примечание 1. Рассмотрим первый тест. Распишем ходы игроков:
    Анри — 11
    Дима — 33
    Анри — 55
    Дима — 1010
    Анри — 33
    Дима — 22
    Анри — 1212
Побеждает Анри, так как он делает последний ход и достает четное количество носков.
Sample Input 1:
    1
    3
    5
    10
    3
    2
    12
Sample Output 1:
    Анри
Sample Input 2:
    2
    58
Sample Output 2:
    Дима
Важен только последний элемент в списке
"""
import sys
lst = list(map(int, sys.stdin))
if len(lst) % 2 == 1:
    print('Анри' if lst[-1] % 2 == 0 else 'Дима')
else:
    print('Дима' if lst[-1] % 2 == 0 else 'Анри')


""" Упражнение 4
Дан список чисел, каждое из которых — рост очередного ученика онлайн-школы BEEGEEK. Напишите программу, которая 
определяет рост самого низкого и самого высокого учеников, а также средний рост среди всех учеников.
Формат входных данных
На вход программе подается произвольное количество строк, в каждой строке записано натуральное число — рост очередного 
ученика онлайн-школы BEEGEEK.
Формат выходных данных
Программа должна определить рост самого низкого и самого высокого учеников, а также средний рост среди всех учеников.
Полученные результаты должны быть выведены в следующем формате:
    Рост самого низкого ученика: <рост самого низкого ученика>
    Рост самого высокого ученика: <рост самого высокого ученика>
    Средний рост: <средний рост среди всех учеников>
Примечание 1. Если на вход программе ничего не подается, то она должна выводить текст нет учеников.
Sample Input 1:
    185
    170
    190
    155
    175
Sample Output 1:
    Рост самого низкого ученика: 155
    Рост самого высокого ученика: 190
    Средний рост: 175.0
Sample Input 2:
    
Sample Output 2:
    нет учеников
"""
import sys
lst = list(map(int, sys.stdin))
if lst:
    print(f'Рост самого низкого ученика: {min(lst)}')
    print(f'Рост самого высокого ученика: {max(lst)}')
    print(f'Средний рост: {sum(lst) / len(lst)}')
else:
    print('нет учеников')


""" Упражнение 5
Дан блок кода на языке Python. Напишите программу, которая определяет количество строк в данном коде, которые содержат 
в себе только комментарии. Если в строке помимо комментария имеется что-то еще, то такую строку учитывать не нужно.
Формат входных данных
На вход программе подается произвольное количество строк, в совокупности представляющих блок кода на языке Python.
Формат выходных данных
Программа должна вывести единственное число — кол-во строк в введенном коде, которые содержат в себе только комментарии.
Sample Input:
    s = str(input())
    k = 0
    #подсчитываем количество цифр
    for i in range(len(s)):
        #проверяем каждый символ
        if s[i] in '0123456789': #проверяем, является ли элемент строки цифрой
            k += 1
    print(k)
Sample Output:
    2
"""
import sys
c = 0
for line in sys.stdin.readlines():
    if line.lstrip().startswith('#'):
        c += 1
print(c)


""" Упражнение 6
Дан блок кода на языке Python. Напишите программу, которая удаляет все строки в данном коде, которые содержат в себе 
только комментарии. Если в строке помимо комментария имеется что-то еще, то такую строку учитывать не нужно.
Формат входных данных
На вход программе подается произвольное количество строк, в совокупности представляющих блок кода на языке Python.
Формат выходных данных
Программа должна вывести введенный блок кода, предварительно удалив из него все строки которые содержат в себе только 
комментарии.
Примечание 1. Порядок вывода строк кода должен совпадать с порядком их ввода.
Sample Input:
    digit = int(input())
    s = input()
    for i in s:
        #комментирую потому что прикольно
    
        if 97 > ord(i) - digit:
            temp = ord(i) - digit + 26
            print(chr(temp), end='')   #вывод
        else:
            #ахаха
            temp = ord(i) - digit
            print(chr(temp), end='')
Sample Output:
    digit = int(input())
    s = input()
    for i in s:
    
        if 97 > ord(i) - digit:
            temp = ord(i) - digit + 26
            print(chr(temp), end='')   #вывод
        else:
            temp = ord(i) - digit
            print(chr(temp), end='')
"""
import sys
for line in sys.stdin.readlines():
    if not line.lstrip().startswith('#'):
        sys.stdout.write(line)


""" Упражнение 7
По чатам одного немалоизвестного мессенджера начали появляться новости сомнительного содержания. Оказалось, что некий 
молодежный клуб решил подшутить, распространяя всякие глупости. Однако подобное хулиганство мешает доверчивым людям, 
особенно пенсионного возраста, поэтому группа независимых программистов решила разработать бота, который мог бы оценить 
степень достоверности новости, а также отнести её к какой-либо категории.
Напишите программу, которая выводит все новости заданной категории, располагая их по возрастанию степени достоверности.
Формат входных данных
На вход программе подается произвольное количество строк, в каждой строке, кроме последней, записана новость, категория, 
к которой она относится, и ее достоверность в следующем формате:
<новость> / <категория> / <достоверность>
В последней строке подается одиночная категория.
Формат выходных данных
Программа должна вывести все новости, которые относятся к введенной категории. Новости должны быть расположены в 
порядке возрастания степени достоверности, а при совпадении степеней достоверности — в лексикографическом порядке 
самих новостей.
Sample Input:
    На рейсах Поражения второй пилот будет исполнять обязанности бортпроводника / Авиация / 0.3
    Огурец исключит из своих рядов членов, не проголосовавших за Единую Арстоцку на выборах / Политика / 0.8
    Орбистанские точки общепита будут закрыты для вакцинированных граждан / Общество / 0.7
    Джорджи Костава получил членский билет Независимого Кобрастана / Политика / 0.0
    В Колечии повысят призывной возраст до 40 лет / Политика / 1.0
    Всем гражданам Антегрии въезд в Арстоцку запрещен / Политика / 0.8
    Политика
Sample Output:
    Джорджи Костава получил членский билет Независимого Кобрастана
    Всем гражданам Антегрии въезд в Арстоцку запрещен
    Огурец исключит из своих рядов членов, не проголосовавших за Единую Арстоцку на выборах
    В Колечии повысят призывной возраст до 40 лет
"""
import sys
lst = list(map(lambda x: x.split(' / '), sys.stdin))
cat = ''.join(lst.pop())
lst = filter(lambda x: x[1] == cat, lst)
for line in sorted(lst, key=lambda x: (float(x[2].strip('\n')), x[0])):
    print(line[0])


""" Упражнение 8
Дана последовательность дат. Напишите программу, которая определяет, в каком порядке расположены даты в данной 
последовательности.
Формат входных данных
На вход программе подается произвольное количество строк (две или более), в каждой строке записана дата 
в формате DD.MM.YYYY.
Формат выходных данных
Программа должны вывести текст:
    ASC, если даты в введенной последовательности расположены строго в порядке возрастания
    DESC, если даты в введенной последовательности расположены строго в порядке убывания
    MIX, если даты в введенной последовательности расположены ни в порядке возрастания, ни в порядке убывания
Параметры ASC и DESC используются в языке SQL для сортировки по возрастанию и по убыванию соответственно.
Sample Input 1:
    14.06.2022
    20.06.2022
    21.06.2022
Sample Output 1:
    ASC
Sample Input 2:
    01.09.2022
    01.08.2022
    01.07.2022
    01.06.2022
    01.05.2022
Sample Output 2:
    DESC
Sample Input 3:
    10.10.2021
    19.01.1999
    09.04.2022
    01.01.1978
Sample Output 3:
    MIX
"""
import datetime as dt
import sys
lst = [dt.datetime.strptime(x.strip('\n'), '%d.%m.%Y') for x in sys.stdin]
if lst == sorted(set(lst)):
    print('ASC')
elif lst == sorted(set(lst), reverse=True):
    print('DESC')
else:
    print('MIX')


""" Упражнение 9
Дана последовательность целых чисел. Напишите программу, которая определяет, является ли данная последовательность 
прогрессией, и если да, то определяет её вид.
Формат входных данных
На вход программе подается произвольное количество строк (не менее трёх), в каждой строке записано натуральное число — 
очередной член последовательности.
Формат выходных данных
Программа должна вывести текст:
    Арифметическая прогрессия, если введенная последовательность чисел является арифметической прогрессией
    Геометрическая прогрессия, если введенная последовательность чисел является геометрической прогрессией
    Не прогрессия, если введенная последовательность чисел не является прогрессией
Примечание 1. Гарантируется, что вид прогрессии определяется однозначно.
Примечание 2. Подробнее об арифметической и геометрической прогрессиях тут и тут соответственно.
Sample Input 1:
    1
    2
    3
    4
    5
Sample Output 1:
    Арифметическая прогрессия
Sample Input 2:
    2
    4
    8
    16
Sample Output 2:
    Геометрическая прогрессия
Sample Input 3:
    1
    9
    1
    1
    4
    5
Sample Output 3:
    Не прогрессия
"""
import sys
lst = list(map(int, sys.stdin))
if lst == sorted(set(lst)):
    if lst[-1] - lst[-2] == lst[1] - lst[0]:
        print('Арифметическая прогрессия')
    elif lst[-1] / lst[-2] == lst[1] / lst[0]:
        print('Геометрическая прогрессия')
    else:
        print('Не прогрессия')
else:
    print('Не прогрессия')

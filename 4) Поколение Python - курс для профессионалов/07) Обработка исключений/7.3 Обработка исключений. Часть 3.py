""" Упражнение 1
Напишите программу с использованием конструкции try-except, которая выводит название месяца, соответствующее введенному
целому числу (от 1 до 12 включительно), причем
если введенное число не принадлежит отрезку [1; 12], программа должна вывести текст:
    Введено число из недопустимого диапазона
если введенное значение не является целым числом, программа должна вывести текст:
    Введено некорректное значение
Формат входных данных
На вход программе подается единственная строка с произвольным значением.
Формат выходных данных
Программа должна вывести полное название месяца на английском, соответствующее введенному числу
(от 1 до 12 включительно) или текст с соответствующей ошибкой, если введенное значение некорректно.
Примечание 1. Для получения списка с названиями месяцев вспомните атрибут month_name из модуля calendar.
Примечание 2. Тестовые данные доступны по ссылке.
Sample Input 1:
    1
Sample Output 1:
    January
Sample Input 2:
    четыре
Sample Output 2:
    Введено некорректное значение
Sample Input 3:
    13
Sample Output 3:
    Введено число из недопустимого диапазона
"""
import calendar as c
try:
    num = int(input())
    print(c.month_name[num if num > 0 else 20])
except IndexError:
    print('Введено число из недопустимого диапазона')
except:
    print('Введено некорректное значение')


""" Упражнение 2
Реализуйте функцию add_to_list_in_dict() с использованием конструкции try-except, которая принимает три аргумента в 
следующем порядке:
    data — словарь списков, то есть словарь, значением в котором является список
    key — хешируемый объект
    element — произвольный объект
Функция должна добавлять объект element в список по ключу key в словаре data. Если ключа key в словаре data нет, 
функция должна добавить его в словарь, присвоить ему в качестве значения пустой список и добавить в этот список объект 
element.
Примечание 1. Функция должна изменять переданный словарь и возвращать значение None.
Примечание 2. Элементы в словарь и в список должны добавляться в конец.
Примечание 3. В тестирующую систему сдайте программу, содержащую только необходимую функцию add_to_list_in_dict(), 
но не код, вызывающий ее.
Примечание 4. Тестовые данные доступны по ссылке.
Sample Input 1:
    data = {'a': [1, 2, 3], 'b': [4, 5, 6]}
    add_to_list_in_dict(data, 'b', 7)
    
    print(data)
Sample Output 1:
    {'a': [1, 2, 3], 'b': [4, 5, 6, 7]}
Sample Input 2:
    data = {'a': [1, 2, 3], 'b': [4, 5, 6]}
    add_to_list_in_dict(data, 'c', 7)
    
    print(data)
Sample Output 2:
    {'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7]}
"""
def add_to_list_in_dict(data, key, element):
    try:
        data[key].append(element)
    except KeyError:
        data[key] = [element]


""" Упражнение 3
Напишите программу с использованием конструкции try-except, которая принимает на вход название текстового файла и 
выводит его содержимое. Если файла с данным названием нет в папке с программой, программа должна вывести текст:
    Файл не найден
Формат входных данных
На вход программе подается название текстового файла.
Формат выходных данных
Программа должна вывести содержимое файла с введенным названием или соответствующий текст, если файла с данным 
названием нет в папке с программой.
Примечание 1. Название подаваемого файла уже содержит расширение.
Примечание 2. При открытии файла используйте явное указание кодировки UTF-8.
Примечание 3. Тестовые данные доступны по ссылке.
Sample Input 1:
    nothing.txt
Sample Output 1:
    Ты думал, тут что-то будет?
Sample Input 2:
    grades.csv
Sample Output 2:
    Файл не найден
"""
try:
    file = open(input(), 'r',  encoding='UTF-8')
    print(file.read())
except FileNotFoundError:
    print('Файл не найден')
